"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[644],{1828:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-05036bb3",path:"/guide/services/otp.html",title:"OTP service",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"guide/services/otp.md",git:{updatedTime:1635843044e3,contributors:[{name:"majid mohsenifar",email:"majid.mohsenifar@coretrix.com",commits:1}]}}},2795:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<h1 id="otp-service" tabindex="-1"><a class="header-anchor" href="#otp-service" aria-hidden="true">#</a> OTP service</h1><p>If you want to authenticate your user using OTP you may need to use OTP service. This service can send the code using SMS or even call and verifying it later.</p><p>Register the service into your <code>main.go</code> file:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>registry<span class="token punctuation">.</span><span class="token function">ServiceProviderOTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Access the service:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>service<span class="token punctuation">.</span><span class="token function">DI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h1 id="use-case" tabindex="-1"><a class="header-anchor" href="#use-case" aria-hidden="true">#</a> Use case</h1><p>You can send OTP to user phone using SMS or call like this:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> auth\n<span class="token keyword">import</span> <span class="token punctuation">(</span>\n    <span class="token string">&quot;context&quot;</span>\n    <span class="token string">&quot;service&quot;</span>\n    <span class="token string">&quot;github.com/coretrix/hitrix/service/component/otp&quot;</span>\n<span class="token punctuation">)</span>\n\n<span class="token keyword">func</span> <span class="token function">SendOTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    ormService <span class="token operator">:=</span> service<span class="token punctuation">.</span><span class="token function">DI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OrmEngineForContext</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    OTPService <span class="token operator">:=</span> service<span class="token punctuation">.</span><span class="token function">DI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n    <span class="token comment">//SMS</span>\n    code<span class="token punctuation">,</span> err <span class="token operator">:=</span> OTPService<span class="token punctuation">.</span><span class="token function">SendSMS</span><span class="token punctuation">(</span>ormService<span class="token punctuation">,</span> <span class="token operator">&amp;</span>otp<span class="token punctuation">.</span>Phone<span class="token punctuation">{</span>\n        Number<span class="token punctuation">:</span> <span class="token string">&quot;+123456789&quot;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token comment">//call</span>\n    code<span class="token punctuation">,</span> err <span class="token operator">:=</span> OTPService<span class="token punctuation">.</span><span class="token function">Call</span><span class="token punctuation">(</span>ormService<span class="token punctuation">,</span> <span class="token operator">&amp;</span>otp<span class="token punctuation">.</span>Phone<span class="token punctuation">{</span>\n        Number<span class="token punctuation">:</span> <span class="token string">&quot;+123456789&quot;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>Then you can verify OTP like this:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> auth\n<span class="token keyword">import</span> <span class="token punctuation">(</span>\n    <span class="token string">&quot;context&quot;</span>\n    <span class="token string">&quot;service&quot;</span>\n    <span class="token string">&quot;github.com/coretrix/hitrix/service/component/otp&quot;</span>\n<span class="token punctuation">)</span>\n\n<span class="token keyword">func</span> <span class="token function">Verify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    ormService <span class="token operator">:=</span> service<span class="token punctuation">.</span><span class="token function">DI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OrmEngineForContext</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    OTPService <span class="token operator">:=</span> service<span class="token punctuation">.</span><span class="token function">DI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    code<span class="token operator">:=</span><span class="token string">&quot;1234&quot;</span> <span class="token comment">//the code user entered</span>\n\n    otpRequestValid<span class="token punctuation">,</span> otpCodeValid<span class="token punctuation">,</span> err <span class="token operator">:=</span> OTPService<span class="token punctuation">.</span><span class="token function">Verify</span><span class="token punctuation">(</span>\n    ormService<span class="token punctuation">,</span>\n    <span class="token operator">&amp;</span>otp<span class="token punctuation">.</span>Phone<span class="token punctuation">{</span>Number<span class="token punctuation">:</span> <span class="token string">&quot;+123456789&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    code<span class="token punctuation">,</span>\n    <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',11),e={},t=(0,a(3744).Z)(e,[["render",function(n,s){return p}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,p]of s)n[a]=p;return n}}}]);