"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[124],{2659:(e,n,s)=>{s.r(n),s.d(n,{data:()=>a});const a={key:"v-0d706e4c",path:"/guide/services/pdf.html",title:"PDF service",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"guide/services/pdf.md",git:{updatedTime:1634291321e3,contributors:[{name:"Anton",email:"a.shumansky@gmail.com",commits:1}]}}},4124:(e,n,s)=>{s.r(n),s.d(n,{default:()=>c});const a=(0,s(6252).uE)('<h1 id="pdf-service" tabindex="-1"><a class="header-anchor" href="#pdf-service" aria-hidden="true">#</a> PDF service</h1><p>PDF service provides a generating pdf function from html code using Chrome headless.</p><p>First you need these in your app config:</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">chrome_headless</span><span class="token punctuation">:</span>\n  <span class="token key atrule">web_socket_url</span><span class="token punctuation">:</span> ENV<span class="token punctuation">[</span>CHROME_HEADLESS_WEB_SOCKET_URL<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Register the service into your <code>main.go</code> file:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>registry<span class="token punctuation">.</span><span class="token function">ServiceProviderPDF</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Access the service:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>service<span class="token punctuation">.</span><span class="token function">DI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">PDFService</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Using <code>HtmlToPdf()</code> function to generate PDF from html:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>pdfBytes <span class="token operator">:=</span> pdfService<span class="token punctuation">.</span><span class="token function">HtmlToPdf</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;html&gt;&lt;p&gt;Hi!&lt;/p&gt;&lt;/html&gt;&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Recommended docker file for Chrome headless:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>https://hub.docker.com/r/chromedp/headless-shell/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',12),t={},c=(0,s(3744).Z)(t,[["render",function(e,n){return a}]])},3744:(e,n)=>{n.Z=(e,n)=>{for(const[s,a]of n)e[s]=a;return e}}}]);