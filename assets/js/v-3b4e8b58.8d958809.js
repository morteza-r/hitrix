"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[347],{7362:(e,r,t)=>{t.r(r),t.d(r,{data:()=>a});const a={key:"v-3b4e8b58",path:"/guide/features/flags.html",title:"Flags",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Pre deploy",slug:"pre-deploy",children:[]},{level:2,title:"Force alters",slug:"force-alters",children:[]}],filePathRelative:"guide/features/flags.md",git:{updatedTime:1634291321e3,contributors:[{name:"Anton",email:"a.shumansky@gmail.com",commits:1}]}}},876:(e,r,t)=>{t.r(r),t.d(r,{default:()=>i});const a=(0,t(6252).uE)('<h1 id="flags" tabindex="-1"><a class="header-anchor" href="#flags" aria-hidden="true">#</a> Flags</h1><h2 id="pre-deploy" tabindex="-1"><a class="header-anchor" href="#pre-deploy" aria-hidden="true">#</a> Pre deploy</h2><p>If you run your binary with argument <code>-pre-deploy</code> the program will check for alters and if there is no alters it will exit with code 0 but if there is an alters it will exit with code 1.</p><h2 id="force-alters" tabindex="-1"><a class="header-anchor" href="#force-alters" aria-hidden="true">#</a> Force alters</h2><p>If you run your binary with argument <code>-force-alters</code> the program will check for DB and RediSearch alters and it will execute them(only in local mode).</p><p>You can use this feature during the deployment process check if you need to execute the alters before you deploy it</p>',6),l={},i=(0,t(3744).Z)(l,[["render",function(e,r){return a}]])},3744:(e,r)=>{r.Z=(e,r)=>{for(const[t,a]of r)e[t]=a;return e}}}]);