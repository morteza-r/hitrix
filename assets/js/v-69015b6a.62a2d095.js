"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[769],{6428:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-69015b6a",path:"/guide/services/oss_google.html",title:"OSS Google",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"guide/services/oss_google.md",git:{updatedTime:1634676307e3,contributors:[{name:"Anton",email:"a.shumansky@gmail.com",commits:1},{name:"Krasimir Ivanov",email:"krasimir.ivanov@coretrix.com",commits:1}]}}},8006:(s,n,a)=>{a.r(n),a.d(n,{default:()=>o});const e=(0,a(6252).uE)('<h1 id="oss-google" tabindex="-1"><a class="header-anchor" href="#oss-google" aria-hidden="true">#</a> OSS Google</h1><p>This service is used for storage files into google storage</p><p>Register the service into your <code>main.go</code> file:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>registry<span class="token punctuation">.</span><span class="token function">OSService</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">uint64</span><span class="token punctuation">{</span><span class="token string">&quot;my-bucket-name&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Access the service:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>service<span class="token punctuation">.</span><span class="token function">DI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OSService</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>and you should register the entity <code>OSSBucketCounterEntity</code> into the ORM You should pass parameter as a map that contains all buckets you need as a key and as a value you should pass id. This id should be unique</p><p>In your config folder you should put the .oss.json config file that you have from google Your config file should looks like that:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;project_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;private_key_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;private_key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;client_email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;client_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;auth_uri&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;token_uri&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;auth_provider_x509_cert_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;client_x509_cert_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>The last thing you need to set in domain that gonna be used for the static files. You can setup the domain in hitrix.yaml config file like this:</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">oss</span><span class="token punctuation">:</span> \n  <span class="token key atrule">domain</span><span class="token punctuation">:</span> myapp.com\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>and the url to access your static files will looks like <code>https://static-%s.myapp.com/%s/%s</code> where first %s is app mode</p><p>second %s is bucket name concatenated with app mode</p><p>and last %s is the id of the file</p>',14),t={},o=(0,a(3744).Z)(t,[["render",function(s,n){return e}]])},3744:(s,n)=>{n.Z=(s,n)=>{for(const[a,e]of n)s[a]=e;return s}}}]);